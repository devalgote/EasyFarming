{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/Easyfarming/frontend/src/core/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CarouselPage from \"../core/Carousel\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { getVegetables } from './apiCore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [productsBySell, setProductsBySell] = useState([]);\n  const [productsByArrival, setProductsByArrival] = useState([]);\n  const [error, setError] = useState(false);\n\n  const loadProductsBySell = () => {\n    getProducts(\"sold\").then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setProductsBySell(data);\n      }\n    });\n  };\n\n  const loadProductsByArrival = () => {\n    getProducts(\"createdAt\").then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setProductsByArrival(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    loadProductsByArrival();\n    loadProductsBySell();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Welcome freshMart\",\n    description: \"easy Farming\",\n    className: \"container-fluid\",\n    children: !isAuthenticated() && /*#__PURE__*/_jsxDEV(CarouselPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Home, \"N7XxrRdtPvgr8PemKCipGDvwIJk=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/dev/Desktop/Easyfarming/frontend/src/core/Home.js"],"names":["React","useState","useEffect","CarouselPage","Layout","isAuthenticated","getVegetables","Home","productsBySell","setProductsBySell","productsByArrival","setProductsByArrival","error","setError","loadProductsBySell","getProducts","then","data","loadProductsByArrival"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAAQC,aAAR,QAA4B,WAA5B;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACS,iBAAD,EAAoBC,oBAApB,IAA4CV,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,KAAD,CAAlC;;AAEA,QAAMa,kBAAkB,GAAG,MAAM;AAC7BC,IAAAA,WAAW,CAAC,MAAD,CAAX,CAAoBC,IAApB,CAAyBC,IAAI,IAAI;AAC7B,UAAIA,IAAI,CAACL,KAAT,EAAgB;AACZC,QAAAA,QAAQ,CAACI,IAAI,CAACL,KAAN,CAAR;AACH,OAFD,MAEO;AACHH,QAAAA,iBAAiB,CAACQ,IAAD,CAAjB;AACH;AACJ,KAND;AAOH,GARD;;AAUA,QAAMC,qBAAqB,GAAG,MAAM;AAChCH,IAAAA,WAAW,CAAC,WAAD,CAAX,CAAyBC,IAAzB,CAA8BC,IAAI,IAAI;AAClC,UAAIA,IAAI,CAACL,KAAT,EAAgB;AACZC,QAAAA,QAAQ,CAACI,IAAI,CAACL,KAAN,CAAR;AACH,OAFD,MAEO;AACHD,QAAAA,oBAAoB,CAACM,IAAD,CAApB;AACH;AACJ,KAND;AAOH,GARD;;AAUAf,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,qBAAqB;AACrBJ,IAAAA,kBAAkB;AACrB,GAHQ,EAGN,EAHM,CAAT;AAKH,sBACO,QAAC,MAAD;AACI,IAAA,KAAK,EAAC,mBADV;AAEI,IAAA,WAAW,EAAC,cAFhB;AAGI,IAAA,SAAS,EAAC,iBAHd;AAAA,cAIK,CAACT,eAAe,EAAhB,iBACD,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,UADP;AAUA,CAzCD;;GAAME,I;;KAAAA,I;AA4CN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport CarouselPage from \"../core/Carousel\"\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport {getVegetables} from './apiCore';\n\nconst Home = () => {\n\n    const [productsBySell, setProductsBySell] = useState([]);\n    const [productsByArrival, setProductsByArrival] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadProductsBySell = () => {\n        getProducts(\"sold\").then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProductsBySell(data);\n            }\n        });\n    };\n\n    const loadProductsByArrival = () => {\n        getProducts(\"createdAt\").then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProductsByArrival(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadProductsByArrival();\n        loadProductsBySell();\n    }, []);\n\n\treturn (\n        <Layout\n            title=\"Welcome freshMart\"\n            description=\"easy Farming\"\n            className=\"container-fluid\" >\n            {!isAuthenticated() && (\n            <CarouselPage />\n            )}\n        </Layout>\n\t)\n};\n\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}