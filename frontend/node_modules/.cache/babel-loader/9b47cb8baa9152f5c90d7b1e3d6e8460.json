{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/Easyfarming/frontend/src/user/Profile.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { read, update, updateUser } from \"./apiUser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Profile = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    location: \"\",\n    error: false,\n    success: false\n  });\n  const {\n    token\n  } = isAuthenticated();\n  const {\n    name,\n    email,\n    password,\n    error,\n    success\n  } = values;\n\n  const init = userId => {\n    // console.log(userId);\n    read(userId, token).then(data => {\n      if (data.error) {\n        setValues({ ...values,\n          error: true\n        });\n      } else {\n        setValues({ ...values,\n          name: data.name,\n          email: data.email\n        });\n      }\n    });\n  };\n\n  useEffect(() => {\n    init(match.params.userId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Profile\",\n    description: \"Update your profile\",\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"mb-4\",\n      children: \"Profile update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), JSON.stringify(values)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Profile, \"LaOtY3ChaMv1D31lOZ94lZNJdIA=\");\n\n_c = Profile;\nexport default Profile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"sources":["/home/dev/Desktop/Easyfarming/frontend/src/user/Profile.js"],"names":["React","Layout","isAuthenticated","Link","read","update","updateUser","Profile","values","setValues","useState","name","email","password","location","error","success","token","init","userId","then","data","useEffect","match","params","JSON","stringify"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,UAAvB,QAAyC,WAAzC;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBC,QAAQ,CAAC;AACjCC,IAAAA,IAAI,EAAE,EAD2B;AAEjCC,IAAAA,KAAK,EAAE,EAF0B;AAGjCC,IAAAA,QAAQ,EAAE,EAHuB;AAIjCC,IAAAA,QAAQ,EAAC,EAJwB;AAKjCC,IAAAA,KAAK,EAAE,KAL0B;AAMjCC,IAAAA,OAAO,EAAE;AANwB,GAAD,CAApC;AASA,QAAM;AAAEC,IAAAA;AAAF,MAAYf,eAAe,EAAjC;AACA,QAAM;AAAES,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBE,IAAAA,KAAzB;AAAgCC,IAAAA;AAAhC,MAA4CR,MAAlD;;AAEA,QAAMU,IAAI,GAAGC,MAAM,IAAI;AACnB;AACAf,IAAAA,IAAI,CAACe,MAAD,EAASF,KAAT,CAAJ,CAAoBG,IAApB,CAAyBC,IAAI,IAAI;AAC7B,UAAIA,IAAI,CAACN,KAAT,EAAgB;AACZN,QAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaO,UAAAA,KAAK,EAAE;AAApB,SAAD,CAAT;AACH,OAFD,MAEO;AACHN,QAAAA,SAAS,CAAC,EAAE,GAAGD,MAAL;AAAaG,UAAAA,IAAI,EAAEU,IAAI,CAACV,IAAxB;AAA8BC,UAAAA,KAAK,EAAES,IAAI,CAACT;AAA1C,SAAD,CAAT;AACH;AACJ,KAND;AAOH,GATD;;AAWAU,EAAAA,SAAS,CAAC,MAAM;AACZJ,IAAAA,IAAI,CAACK,KAAK,CAACC,MAAN,CAAaL,MAAd,CAAJ;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI,QAAC,MAAD;AACI,IAAA,KAAK,EAAC,SADV;AAEI,IAAA,WAAW,EAAC,qBAFhB;AAGI,IAAA,SAAS,EAAC,iBAHd;AAAA,4BAKI;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,EAMKM,IAAI,CAACC,SAAL,CAAelB,MAAf,CANL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAtCD;;GAAMD,O;;KAAAA,O;AAwCN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { read, update, updateUser } from \"./apiUser\";\n\nconst Profile = () => {\n    const [values, setValues] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        location:\"\",\n        error: false,\n        success: false\n    });\n\n    const { token } = isAuthenticated();\n    const { name, email, password, error, success } = values;\n\n    const init = userId => {\n        // console.log(userId);\n        read(userId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: true });\n            } else {\n                setValues({ ...values, name: data.name, email: data.email });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.userId);\n    }, []);\n\n    return (\n        <Layout\n            title=\"Profile\"\n            description=\"Update your profile\"\n            className=\"container-fluid\"\n        >\n            <h2 className=\"mb-4\">Profile update</h2>\n            {JSON.stringify(values)}\n        </Layout>\n    );\n};\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}