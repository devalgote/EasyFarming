[{"/home/dev/Desktop/project/frontend/src/index.js":"1","/home/dev/Desktop/project/frontend/src/Routes.js":"2","/home/dev/Desktop/project/frontend/src/core/Home.js":"3","/home/dev/Desktop/project/frontend/src/user/Signin.js":"4","/home/dev/Desktop/project/frontend/src/core/Menu.js":"5","/home/dev/Desktop/project/frontend/src/user/Signup.js":"6","/home/dev/Desktop/project/frontend/src/core/Layout.js":"7","/home/dev/Desktop/project/frontend/src/config.js":"8","/home/dev/Desktop/project/frontend/src/auth/index.js":"9","/home/dev/Desktop/project/frontend/src/auth/PrivateRoute.js":"10","/home/dev/Desktop/project/frontend/src/user/UserDashboard.js":"11","/home/dev/Desktop/project/frontend/src/user/FarmerDashboard.js":"12","/home/dev/Desktop/project/frontend/src/auth/FarmerRoute.js":"13","/home/dev/Desktop/project/frontend/src/farmer/AddVegetable.js":"14","/home/dev/Desktop/project/frontend/src/farmer/apiFarmer.js":"15","/home/dev/Desktop/EasyFarming/frontend/src/index.js":"16","/home/dev/Desktop/EasyFarming/frontend/src/Routes.js":"17","/home/dev/Desktop/EasyFarming/frontend/src/user/Signin.js":"18","/home/dev/Desktop/EasyFarming/frontend/src/core/Home.js":"19","/home/dev/Desktop/EasyFarming/frontend/src/user/UserDashboard.js":"20","/home/dev/Desktop/EasyFarming/frontend/src/user/Profile.js":"21","/home/dev/Desktop/EasyFarming/frontend/src/user/FarmerDashboard.js":"22","/home/dev/Desktop/EasyFarming/frontend/src/user/Signup.js":"23","/home/dev/Desktop/EasyFarming/frontend/src/core/Buy.js":"24","/home/dev/Desktop/EasyFarming/frontend/src/core/Cart.js":"25","/home/dev/Desktop/EasyFarming/frontend/src/core/removeVegetables.js":"26","/home/dev/Desktop/EasyFarming/frontend/src/auth/FarmerRoute.js":"27","/home/dev/Desktop/EasyFarming/frontend/src/auth/PrivateRoute.js":"28","/home/dev/Desktop/EasyFarming/frontend/src/core/viewVegetables.js":"29","/home/dev/Desktop/EasyFarming/frontend/src/farmer/AddVegetable.js":"30","/home/dev/Desktop/EasyFarming/frontend/src/core/Layout.js":"31","/home/dev/Desktop/EasyFarming/frontend/src/core/Carousel.js":"32","/home/dev/Desktop/EasyFarming/frontend/src/core/apiCore.js":"33","/home/dev/Desktop/EasyFarming/frontend/src/core/Card.js":"34","/home/dev/Desktop/EasyFarming/frontend/src/core/Checkbox.js":"35","/home/dev/Desktop/EasyFarming/frontend/src/core/Search.js":"36","/home/dev/Desktop/EasyFarming/frontend/src/user/apiUser.js":"37","/home/dev/Desktop/EasyFarming/frontend/src/core/RadioBox.js":"38","/home/dev/Desktop/EasyFarming/frontend/src/core/cartHelpers.js":"39","/home/dev/Desktop/EasyFarming/frontend/src/auth/index.js":"40","/home/dev/Desktop/EasyFarming/frontend/src/core/fixedPrices.js":"41","/home/dev/Desktop/EasyFarming/frontend/src/core/Checkout.js":"42","/home/dev/Desktop/EasyFarming/frontend/src/core/FarmerViewCard.js":"43","/home/dev/Desktop/EasyFarming/frontend/src/farmer/apiFarmer.js":"44","/home/dev/Desktop/EasyFarming/frontend/src/core/ViewButton.js":"45","/home/dev/Desktop/EasyFarming/frontend/src/config.js":"46","/home/dev/Desktop/EasyFarming/frontend/src/core/ShowImage.js":"47","/home/dev/Desktop/EasyFarming/frontend/src/core/Menu.js":"48"},{"size":155,"mtime":1620141882868,"results":"49","hashOfConfig":"50"},{"size":1054,"mtime":1620141821689,"results":"51","hashOfConfig":"50"},{"size":269,"mtime":1619980966576,"results":"52","hashOfConfig":"50"},{"size":3375,"mtime":1620050308603,"results":"53","hashOfConfig":"50"},{"size":2660,"mtime":1620141855096,"results":"54","hashOfConfig":"50"},{"size":3449,"mtime":1619977169884,"results":"55","hashOfConfig":"50"},{"size":447,"mtime":1619971530505,"results":"56","hashOfConfig":"50"},{"size":50,"mtime":1619972002497,"results":"57","hashOfConfig":"50"},{"size":1603,"mtime":1620141872820,"results":"58","hashOfConfig":"50"},{"size":606,"mtime":1619980354841,"results":"59","hashOfConfig":"50"},{"size":2111,"mtime":1620071176740,"results":"60","hashOfConfig":"50"},{"size":1794,"mtime":1620070104378,"results":"61","hashOfConfig":"50"},{"size":640,"mtime":1620070023594,"results":"62","hashOfConfig":"50"},{"size":4113,"mtime":1620410282323,"results":"63","hashOfConfig":"50"},{"size":464,"mtime":1620410493049,"results":"64","hashOfConfig":"50"},{"size":155,"mtime":1620141882868,"results":"65","hashOfConfig":"66"},{"size":1656,"mtime":1620984018485,"results":"67","hashOfConfig":"66"},{"size":3384,"mtime":1620977570652,"results":"68","hashOfConfig":"66"},{"size":2363,"mtime":1620984980803,"results":"69","hashOfConfig":"66"},{"size":2079,"mtime":1621001300177,"results":"70","hashOfConfig":"66"},{"size":4367,"mtime":1620981823110,"results":"71","hashOfConfig":"66"},{"size":2219,"mtime":1621000995540,"results":"72","hashOfConfig":"66"},{"size":4627,"mtime":1620939724908,"results":"73","hashOfConfig":"66"},{"size":4517,"mtime":1620970822808,"results":"74","hashOfConfig":"66"},{"size":1818,"mtime":1620979397996,"results":"75","hashOfConfig":"66"},{"size":4769,"mtime":1620979384166,"results":"76","hashOfConfig":"66"},{"size":640,"mtime":1620070023594,"results":"77","hashOfConfig":"66"},{"size":606,"mtime":1619980354841,"results":"78","hashOfConfig":"66"},{"size":4698,"mtime":1620979017006,"results":"79","hashOfConfig":"66"},{"size":4745,"mtime":1621001157703,"results":"80","hashOfConfig":"66"},{"size":447,"mtime":1619971530505,"results":"81","hashOfConfig":"66"},{"size":2529,"mtime":1620929222495,"results":"82","hashOfConfig":"66"},{"size":1390,"mtime":1620979084132,"results":"83","hashOfConfig":"66"},{"size":3716,"mtime":1620981012448,"results":"84","hashOfConfig":"66"},{"size":642,"mtime":1620972336756,"results":"85","hashOfConfig":"66"},{"size":3693,"mtime":1620903887150,"results":"86","hashOfConfig":"66"},{"size":1195,"mtime":1620940572705,"results":"87","hashOfConfig":"66"},{"size":645,"mtime":1620924632745,"results":"88","hashOfConfig":"66"},{"size":2331,"mtime":1620934813438,"results":"89","hashOfConfig":"66"},{"size":1603,"mtime":1620924247592,"results":"90","hashOfConfig":"66"},{"size":497,"mtime":1620904137175,"results":"91","hashOfConfig":"66"},{"size":915,"mtime":1620967685475,"results":"92","hashOfConfig":"66"},{"size":2887,"mtime":1621001285240,"results":"93","hashOfConfig":"66"},{"size":910,"mtime":1620980665653,"results":"94","hashOfConfig":"66"},{"size":765,"mtime":1620977405473,"results":"95","hashOfConfig":"66"},{"size":50,"mtime":1619972002497,"results":"96","hashOfConfig":"66"},{"size":371,"mtime":1620923780242,"results":"97","hashOfConfig":"66"},{"size":2700,"mtime":1620984982567,"results":"98","hashOfConfig":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"r8l6u0",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"101"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"101"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"101"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"101"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"f4cc1x",{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"187","messages":"188","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"197","messages":"198","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/dev/Desktop/project/frontend/src/index.js",[],["214","215"],"/home/dev/Desktop/project/frontend/src/Routes.js",[],"/home/dev/Desktop/project/frontend/src/core/Home.js",[],"/home/dev/Desktop/project/frontend/src/user/Signin.js",[],"/home/dev/Desktop/project/frontend/src/core/Menu.js",[],"/home/dev/Desktop/project/frontend/src/user/Signup.js",[],"/home/dev/Desktop/project/frontend/src/core/Layout.js",[],"/home/dev/Desktop/project/frontend/src/config.js",[],"/home/dev/Desktop/project/frontend/src/auth/index.js",[],"/home/dev/Desktop/project/frontend/src/auth/PrivateRoute.js",["216"],"import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/signin\",\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default PrivateRoute;\n","/home/dev/Desktop/project/frontend/src/user/UserDashboard.js",["217"],"import React from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\n\nconst Dashboard = () => {\n    const {\n        user: { _id, name, email, role }\n    } = isAuthenticated();\n\n\tconst userLinks = () => {\n        return (\n            <div className=\"card\">\n                <h4 className=\"card-header\">User Links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/cart\">\n                            My Cart\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/profile/update\">\n                            Update Profile\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n\tconst userInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n\t\t\t\t<h3 className=\"card-header\">User Information</h3>\n\t\t\t\t<ul className=\"list-group\">\n\t\t\t\t\t<li className=\"list-group-item\"> {name} </li>\n\t\t\t\t\t<li className=\"list-group-item\"> {email} </li>\n\t\t\t\t\t<li className=\"list-group-item\"> {role === 1 ? \"Farmer\" : \"Customer\"} </li>\n\t\t\t\t</ul>\n\t\t\t</div>\n        );\n    };\n\n\tconst purchaseHistory = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">Purchase history</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">history</li>\n                </ul>\n            </div>\n        );\n\t};\n\n\treturn (\n        <Layout\n            title={`Welcome ${name} !`} description=\"easy Farming\" \n\t\t\tclassName=\"container-fluid\"\n        >\n\t\t\t\n\t\t\t<div className=\"row\">\n                <div className=\"col-md-2 offset-md-0\">{userLinks()}</div>\n                <div className=\"col-md-6 offset-md-1\">\n                    {userInfo()}\n                    {purchaseHistory()}\n                </div>\n            </div>\n\n        </Layout>\n\t)\n};\n\n\nexport default Dashboard;\n","/home/dev/Desktop/project/frontend/src/user/FarmerDashboard.js",["218"],"import React from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\n\nconst FarmerDashboard = () => {\n    const {\n        user: { _id, name, email, role }\n    } = isAuthenticated();\n\n\tconst FarmerLinks = () => {\n        return (\n            <div className=\"card\">\n                <h4 className=\"card-header\">Farmer Links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/add/vegetables\">\n                            Add Vegetables\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/remove/vegetables\">\n                            Remove Vegetables\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n\tconst farmerInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n\t\t\t\t<h3 className=\"card-header\">User Information</h3>\n\t\t\t\t<ul className=\"list-group\">\n\t\t\t\t\t<li className=\"list-group-item\"> {name} </li>\n\t\t\t\t\t<li className=\"list-group-item\"> {email} </li>\n\t\t\t\t\t<li className=\"list-group-item\"> {role === 1 ? \"Farmer\" : \"Customer\"} </li>\n\t\t\t\t</ul>\n\t\t\t</div>\n        );\n    };\n\n\treturn (\n        <Layout\n            title={`Welcome ${name} !`} description=\"easy Farming\" \n\t\t\tclassName=\"container-fluid\"\n        >\n\t\t\t\n\t\t\t<div className=\"row\">\n                <div className=\"col-md-2 offset-md-0\">{FarmerLinks()}</div>\n                <div className=\"col-md-6 offset-md-1\">\n                    {farmerInfo()}\n                </div>\n            </div>\n\n        </Layout>\n\t)\n};\n\n\nexport default FarmerDashboard;\n","/home/dev/Desktop/project/frontend/src/auth/FarmerRoute.js",["219"],"import React, { Component } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { isAuthenticated } from \"./index\";\n\nconst FarmerRoute = ({ component: Component, ...rest }) => (\n    <Route\n        {...rest}\n        render={props =>\n            isAuthenticated() && isAuthenticated().user.role === 1 ? (\n                <Component {...props} />\n            ) : (\n                <Redirect\n                    to={{\n                        pathname: \"/signin\",\n                        state: { from: props.location }\n                    }}\n                />\n            )\n        }\n    />\n);\n\nexport default FarmerRoute;","/home/dev/Desktop/project/frontend/src/farmer/AddVegetable.js",["220","221","222","223","224","225","226"],"/home/dev/Desktop/project/frontend/src/farmer/apiFarmer.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/index.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/Routes.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/user/Signin.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/core/Home.js",["227","228","229"],"import React, { Fragment, useState, useEffect } from \"react\";\nimport CarouselPage from \"../core/Carousel\"\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport {getVegetables} from './apiCore';\nimport Card from './Card'\n\nconst Home = () => {\n\n    const [VegetablesBySell, setVegetablesBySell] = useState([]);\n    const [VegetablesByArrival, setVegetablesByArrival] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadVegetablesBySell = () => {\n        getVegetables(\"sold\").then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setVegetablesBySell(data);\n            }\n        });\n    };\n\n    const loadVegetablesByArrival = () => {\n        getVegetables(\"createdAt\").then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setVegetablesByArrival(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        loadVegetablesByArrival();\n        loadVegetablesBySell();\n    }, []);\n\n\treturn (\n        <Layout\n            title=\"Welcome freshMart\"\n            description=\"easy Farming\"\n            className=\"container-fluid\" >\n\n\t\t\t{!isAuthenticated() && (\n            <CarouselPage />\n            )}\n\n            {!isAuthenticated() ||  isAuthenticated().user.role === 1 && (\n            <CarouselPage />\n            )}\n                \n            {isAuthenticated() && isAuthenticated().user.role === 0 &&  (\n\n                <Fragment>\n                    <div className=\"ml-5 mr-5\">\n                        <h2 className=\"mb-4\">New Arrivals</h2>\n                        <div className=\"row\">\n                            {VegetablesByArrival.map((vegetable, i) => (\n                                <Card key={i} vegetable={vegetable} />\n                            ))}\n                        </div>\n\n                        <h2 className=\"mb-4\">Best Sellers</h2>\n                        <div className=\"row\">\n                            {VegetablesBySell.map((vegetable, i) => (\n                                <Card key={i} vegetable={vegetable} />\n                            ))}\n                        </div>\n                    </div>\n                </Fragment>    \n\n            )}\n            \n            \n\n        </Layout>\n\t)\n};\n\n\nexport default Home;\n","/home/dev/Desktop/EasyFarming/frontend/src/user/UserDashboard.js",["230"],"import React from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\n\nconst Dashboard = () => {\n    const {\n        user: { _id, name, email, role }\n    } = isAuthenticated();\n\n\tconst userLinks = () => {\n        return (\n            <div className=\"card ml-5\">\n                <h4 className=\"card-header\">User Links</h4>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to=\"/cart\">\n                            My Cart\n                        </Link>\n                    </li>\n                    <li className=\"list-group-item\">\n                        <Link className=\"nav-link\" to={`/profile/${_id}`} >\n                            Update Profile\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n    };\n\n\tconst userInfo = () => {\n        return (\n            <div className=\"card mb-5\">\n\t\t\t\t<h3 className=\"card-header\">User Information</h3>\n\t\t\t\t<ul className=\"list-group\">\n\t\t\t\t\t<li className=\"list-group-item\"> {name} </li>\n\t\t\t\t\t<li className=\"list-group-item\"> {email} </li>\n\t\t\t\t\t<li className=\"list-group-item\"> {role === 1 ? \"Farmer\" : \"Customer\"} </li>\n\t\t\t\t</ul>\n\t\t\t</div>\n        );\n    };\n\n\tconst purchaseHistory = () => {\n        return (\n            <div className=\"card mb-5\">\n                <h3 className=\"card-header\">Purchase history</h3>\n                <ul className=\"list-group\">\n                    <li className=\"list-group-item\">history</li>\n                </ul>\n            </div>\n        );\n\t};\n\n\treturn (\n        <Layout\n            title={`Welcome ${name} !`} description=\"easy Farming\" \n\t\t\tclassName=\"container-fluid\"\n        >\n\t\t\t\n\t\t\t<div className=\"row\">\n                <div className=\"col-md-3 offset-md-0\">{userLinks()}</div>\n                <div className=\"col-md-6 offset-md-1\">\n                    {userInfo()}\n                </div>\n            </div>\n\n        </Layout>\n\t)\n};\n\n\nexport default Dashboard;\n","/home/dev/Desktop/EasyFarming/frontend/src/user/Profile.js",["231","232","233"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { read, update, updateUser } from \"./apiUser\";\n\nconst Profile = ({ match }) => {\n    const [values, setValues] = useState({\n        name: \"\",\n        email: \"\",\n        password: \"\",\n        location:\"\",\n        error: false,\n        success: false\n    });\n\n    const { token } = isAuthenticated();\n    const { name, email, password, location, error, success } = values;\n\n    const init = userId => {\n        // console.log(userId);\n        read(userId, token).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: true });\n            } else {\n                setValues({ ...values, name: data.name, email: data.email });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init(match.params.userId);\n    }, []);\n\n    const handleChange = name => e => {\n        setValues({ ...values, error: false, [name]: e.target.value });\n    };\n\n    const clickSubmit = e => {\n        e.preventDefault();\n        update(match.params.userId, token, { name, email, password, location }).then(\n            data => {\n                if (data.error) {\n                    console.lgo(data.error);\n                } else {\n                    updateUser(data, () => {\n                        setValues({\n                            ...values,\n                            name: data.name,\n                            email: data.email,\n                            location: data.location,\n                            success: true\n                        });\n                    });\n                }\n            }\n        );\n    };\n\n    const redirectUser = success => {\n        if (success) {\n            return <Redirect to=\"/\" />;\n        }\n    };\n\n    const profileUpdate = (name, email, password, location) => (\n        <div className=\"auth-wrapper\">\n            <div className=\"auth-inner-left\">\n                <form>\n                    <h3>Update Details</h3>\n                    <div className=\"form-group\">\n                        <label >Name</label>\n                        <input\n                            onChange={handleChange(\"name\")}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"Name\" \n                            value={name}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label >Email</label>\n                        <input\n                            onChange={handleChange(\"email\")}\n                            type=\"email\"\n                            className=\"form-control\"\n                            placeholder=\"Enter email\"\n                            value={email}\n                        />\n                    </div>\n\n                    <div className=\"form-group\">\n                        <label>Password</label>\n                        <input\n                            onChange={handleChange(\"password\")}\n                            type=\"password\"\n                            className=\"form-control\"\n                            placeholder=\"Enter password\"\n                            value={password}\n                        />\n                    </div>\n                    <div className=\"form-group\">\n                        <label >Location</label>\n                        <input\n                            onChange={handleChange(\"location\")}\n                            type=\"text\"\n                            className=\"form-control\"\n                            placeholder=\"location\" \n                            value={location}\n                        />\n                    </div>\n                    <button onClick={clickSubmit} className=\"btn btn-secondary btn-lg btn-block\">Submit</button>\n                </form>\n            </div>\n        </div>\n    );\n\n    return (\n        <Layout\n            title=\"Profile Update\"\n            description=\" \"\n            className=\"container-fluid\"\n        >\n            <div className=\"col-4 ml-10\">\n                {profileUpdate(name, email, password, location)}\n                {redirectUser(success)}\n            </div>\n        </Layout>\n    );\n};\n\nexport default Profile;\n","/home/dev/Desktop/EasyFarming/frontend/src/user/FarmerDashboard.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/user/Signup.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/core/Buy.js",["234","235","236"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Search from \"./Search\";\nimport Card from \"./Card\";\nimport {getFarmers, getFilteredVegetables} from \"./apiCore\";\nimport Checkbox from \"./Checkbox\";\nimport RadioBox from \"./RadioBox\";\nimport { prices } from \"./fixedPrices\";\n\nconst Buy = () => {\n\n    const [myFilters, setMyFilters] = useState({\n        filters: { farmer_id: [], price: [] }\n    });\n\n    const [farmers, setFarmers] = useState([]);\n    const [error, setError] = useState(false);\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    const init = () => {\n        getFarmers().then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFarmers(data);\n            }\n        });\n    };\n    const loadFilteredResults = newFilters => {\n        console.log(\"New Filters \",newFilters);\n        getFilteredVegetables(skip, limit, newFilters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults(data.data);\n                setSize(data.size);\n                setSkip(0);\n\n                console.log(\"Results \", filteredResults);\n            }\n        });\n    };\n\n    const loadMore = () => {\n        let toSkip = skip + limit;\n        // console.log(newFilters);\n        getFilteredVegetables(toSkip, limit, myFilters.filters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults([...filteredResults, ...data.data]);\n                setSize(data.size);\n                setSkip(toSkip);\n                console.log(\"Results \",filteredResults);\n            }\n        });\n    };\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 &&\n            size >= limit && (\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\n                    Load more\n                </button>\n            )\n        );\n    };\n\n    useEffect(() => {\n        init();\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        console.log(\"SHOP\", filters, filterBy);\n        const newFilters = { ...myFilters };\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy === \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n        console.log(\"New Filters \", newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    return (\n        <Layout\n            title=\"Buy now\"\n            description=\"fresh Veggies at your door\"\n            className=\"container-fluid\"\n        >\n            <Search />\n            <div className=\"row\">\n                <div className=\"col-3\">\n                    <h4>Filter by farmers</h4>\n                    <ul>\n                        <Checkbox\n                            farmers={farmers}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"farmer_id\")\n                            }\n                        />\n                    </ul>\n\n                    <h4>Filter by price range</h4>\n                    <div>\n                        <RadioBox\n                            prices={prices}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"price\")\n                            }\n                        />\n                    </div>\n                </div>\n\n                <div className=\"col-8\">\n                    <h2 className=\"mb-4\">Vegetables</h2>\n                    <div className=\"row\">\n                        {filteredResults.map((vegetable, i) => (\n                            <Card key={i} vegetable={vegetable} />\n                        ))}\n                    </div>\n                    <hr/>\n                    {loadMoreButton()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Buy;\n","/home/dev/Desktop/EasyFarming/frontend/src/core/Cart.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/core/removeVegetables.js",["237","238","239","240","241","242"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Search from \"./Search\";\nimport FCard from \"./FarmerViewCard\";\nimport {getFilteredVegetables} from \"./apiCore\";\nimport { prices } from \"./fixedPrices\";\nimport ViewButton from \"./ViewButton\";\nimport RadioBox from \"./RadioBox\";\nimport {isAuthenticated} from \"../auth\";\n\nconst Remove = () => {\n\n    const {user} = isAuthenticated();\n    const [myFilters, setMyFilters] = useState({\n        filters: { farmer_id: [], price: [] }\n    });\n\n    \n    const [error, setError] = useState(false);\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [click, setClick] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    \n    const loadFilteredResults = newFilters => {\n        console.log(\"New Filters \",newFilters);\n        getFilteredVegetables(skip, limit, newFilters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults(data.data);\n                setSize(data.size);\n                setSkip(0);\n\n                console.log(\"Results \", filteredResults);\n            }\n        });\n    };\n\n    const loadMore = () => {\n        let toSkip = skip + limit;\n        // console.log(newFilters);\n        getFilteredVegetables(toSkip, limit, myFilters.filters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults([...filteredResults, ...data.data]);\n                setSize(data.size);\n                setSkip(toSkip);\n                console.log(\"Results \",filteredResults);\n            }\n        });\n    };\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 &&\n            size >= limit && (\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\n                    Load more\n                </button>\n            )\n        );\n    };\n\n    useEffect(() => {\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        console.log(\"SHOP\", filters, filterBy);\n        setClick(1);\n        const newFilters = { ...myFilters };\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy === \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n        console.log(\"New Filters \", newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    const noItemsMessage = () => (\n        <h2>\n            Click on View Items <br />\n        </h2>\n    );\n\n    const showItems = () => {\n        return (\n            <div>\n                <div className=\"row\">\n                        {filteredResults.map((vegetable, i) => (\n                            <FCard key={i} \n                                vegetable={vegetable} \n                                showAddToCartButton={false}\n                                showRemoveVegetableButton={true}\n                            />\n                        ))}\n                    </div>\n                    <hr/>\n                    {loadMoreButton()}\n            </div>\n        );\n    };\n\n    return (\n        <Layout\n            title=\"Remove vegetables\"\n            description=\"\"\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-3\">\n                    <h4>Click here </h4>\n                    <ul>\n                        <ViewButton\n                            handleFilters={filters =>\n                                handleFilters(filters, \"farmer_id\")\n                            }\n                        />\n                    </ul>\n\n                    <h4>Filter by price range</h4>\n                    <div>\n                        <RadioBox\n                            prices={prices}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"price\")\n                            }\n                        />\n                    </div>\n                </div>\n\n                <div className=\"col-8\">\n                    <h2 className=\"mb-4\">Vegetables</h2>\n                    {click==1 ? showItems() : noItemsMessage()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Remove;\n","/home/dev/Desktop/EasyFarming/frontend/src/auth/FarmerRoute.js",["243"],"/home/dev/Desktop/EasyFarming/frontend/src/auth/PrivateRoute.js",["244"],"/home/dev/Desktop/EasyFarming/frontend/src/core/viewVegetables.js",["245","246","247","248","249","250"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Search from \"./Search\";\nimport FCard from \"./FarmerViewCard\";\nimport {getFilteredVegetables} from \"./apiCore\";\nimport { prices } from \"./fixedPrices\";\nimport ViewButton from \"./ViewButton\";\nimport RadioBox from \"./RadioBox\";\nimport {isAuthenticated} from \"../auth\";\n\nconst View = () => {\n\n    const {user} = isAuthenticated();\n    const [myFilters, setMyFilters] = useState({\n        filters: { farmer_id: [], price: [] }\n    });\n\n    \n    const [error, setError] = useState(false);\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [click, setClick] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    \n    const loadFilteredResults = newFilters => {\n        console.log(\"New Filters \",newFilters);\n        getFilteredVegetables(skip, limit, newFilters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults(data.data);\n                setSize(data.size);\n                setSkip(0);\n\n                console.log(\"Results \", filteredResults);\n            }\n        });\n    };\n\n    const loadMore = () => {\n        let toSkip = skip + limit;\n        // console.log(newFilters);\n        getFilteredVegetables(toSkip, limit, myFilters.filters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults([...filteredResults, ...data.data]);\n                setSize(data.size);\n                setSkip(toSkip);\n                console.log(\"Results \",filteredResults);\n            }\n        });\n    };\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 &&\n            size >= limit && (\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\n                    Load more\n                </button>\n            )\n        );\n    };\n\n    useEffect(() => {\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        console.log(\"SHOP\", filters, filterBy);\n        setClick(1);\n        const newFilters = { ...myFilters };\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy === \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n        console.log(\"New Filters \", newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    const noItemsMessage = () => (\n        <h2>\n            Click on View Items <br />\n        </h2>\n    );\n\n    const showItems = () => {\n        return (\n            <div>\n                <div className=\"row\">\n                        {filteredResults.map((vegetable, i) => (\n                            <FCard key={i} \n                                vegetable={vegetable} \n                                showAddToCartButton={false}\n                            />\n                        ))}\n                    </div>\n                    <hr/>\n                    {loadMoreButton()}\n            </div>\n        );\n    };\n\n    return (\n        <Layout\n            title=\"Your vegetables\"\n            description=\"\"\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-3\">\n                    <h4>Click here </h4>\n                    <ul>\n                        <ViewButton\n                            handleFilters={filters =>\n                                handleFilters(filters, \"farmer_id\")\n                            }\n                        />\n                    </ul>\n\n                    <h4>Filter by price range</h4>\n                    <div>\n                        <RadioBox\n                            prices={prices}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"price\")\n                            }\n                        />\n                    </div>\n                </div>\n\n                <div className=\"col-8\">\n                    <h2 className=\"mb-4\">Vegetables</h2>\n                    {click==1 ? showItems() : noItemsMessage()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default View;\n","/home/dev/Desktop/EasyFarming/frontend/src/farmer/AddVegetable.js",["251","252","253","254"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"../core/Layout\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\nimport { createVegetable } from \"./apiFarmer\";\n\nconst AddVegetable = () => {\n    const [values, setValues] = useState({\n        name: \"\",\n        price: \"\",\n        quantity: \"\",\n        farmer_id:\"\",\n        photo: \"\",\n        loading: false,\n        error: \"\",\n        createdVegetable: \"\",\n        redirectToProfile: false,\n        formData: \"\"\n    });\n\n    const { user, token } = isAuthenticated();\n\n    const {\n        name,\n        price,\n        quantity,\n        farmer_id,\n        loading,\n        error,\n        createdVegetable,\n        redirectToProfile,\n        formData\n    } = values;\n\n    useEffect(() => {\n        setValues({ ...values, formData: new FormData() });\n    }, []);\n\n    const handleChange = name => event => {\n        const value =\n            name === \"photo\" ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: \"\", loading: true });\n\n        createVegetable(user._id, token, formData)\n        .then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: \"\",\n                    photo: \"\",\n                    price: \"\",\n                    quantity: \"\",\n                    loading: false,\n                    createdVegetable: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n\n\n            <div className=\"form-group\">\n                <label>Item name</label>\n                <input\n                    onChange={handleChange(\"name\")}\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Item name\"\n                    value={name}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label >Price</label>\n                <input\n                    onChange={handleChange(\"price\")}\n                    type=\"number\"\n                    className=\"form-control\"\n                    value={price}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label >Quantity</label>\n                <input\n                    onChange={handleChange(\"quantity\")}\n                    type=\"number\"\n                    className=\"form-control\"\n                    value={quantity}\n                />\n            </div>\n\n            <h4>Upload Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input\n                        onChange={handleChange(\"photo\")}\n                        type=\"file\"\n                        name=\"photo\"\n                        accept=\"image/*\"\n                    />\n                </label>\n            </div>\n            <div className=\"form-check\">\n                <input\n                    onChange={handleChange(\"farmer_id\")}\n                    type=\"checkbox\"\n                    className=\"form-check-input\"\n                    value={`${user._id}`}\n                />\n                <label className=\"form-check-label\" > Confirm</label>\n            </div>\n\n            <button className=\"btn btn-outline-secondary\">Add Vegetable</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div\n            className=\"alert alert-danger\"\n            style={{ display: error ? \"\" : \"none\" }}\n        >\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div\n            className=\"alert alert-info\"\n            style={{ display: createdVegetable ? \"\" : \"none\" }}\n        >\n            <h2>{`${createdVegetable}`} is added!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return(\n        <Layout\n            title=\"Add a new vegetable\"\n            description={`Helloo ${user.name}, ready to add a new vegetable?`}\n        >\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddVegetable;\n","/home/dev/Desktop/EasyFarming/frontend/src/core/Layout.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/core/Carousel.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/core/apiCore.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/core/Card.js",["255"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport ShowImage from \"./ShowImage\"\nimport { addItem, updateItem, removeItem } from \"./cartHelpers\"\nimport \"./nav.css\"\n\nconst Card = ({ vegetable, showAddToCartButton = true, cartUpdate = false, showRemoveVegetableButton = false, setRun = f => f,\n    run = undefined }) => {\n\n    const [redirect, setRedirect] = useState(false);\n    const [count, setCount] = useState(vegetable.count);\n\n    const addToCart = () => {\n        addItem(vegetable, () => {\n            setRedirect(true);\n        });\n    };\n\n\n    const shouldRedirect = redirect => {\n        if (redirect) {\n            return <Redirect to=\"/cart\" />;\n        }\n    };\n\n    const showAddToCart = showAddToCartButton => {\n        return (\n            showAddToCartButton && (\n                <button\n                    onClick={addToCart}\n                    className=\"btn btn-outline-warning mb-2\"\n                >\n                    Add to cart\n                </button>\n            )\n        );\n    };\n\n    const showStock = quantity => {\n        return quantity > 0 ? (\n          <span className=\"badge badge-primary badge-pill\">In Stock </span>\n        ) : (\n          <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\n        );\n      };\n\n    const showRemoveButton = showRemoveVegetableButton => {\n        return (\n            showRemoveVegetableButton && (\n                <button\n                    onClick={() => {removeItem(vegetable._id); setRun(!run);}}\n                    className=\"btn btn-outline-danger mt-2 mb-2\"\n                >\n                    Remove Vegetable\n                </button>\n            )\n        );\n    };\n\n    const handleChange = vegetableId => event => {\n        setRun(!run);\n        setCount(event.target.value < 1 ? 1 : event.target.value);\n        if (event.target.value >= 1) {\n            updateItem(vegetableId, event.target.value);\n        }\n    };\n\n    const showCartUpdateOptions = cartUpdate => {\n        return (\n            cartUpdate && (\n                <div>\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <span className=\"input-group-text\">\n                                Adjust Quantity\n                            </span>\n                        </div>\n                        <input\n                            type=\"number\"\n                            className=\"form-control\"\n                            value={count}\n                            onChange={handleChange(vegetable._id)}\n                        />\n                    </div>\n                </div>\n            )\n        );\n    };\n\n  //  const remain = vegetable.quantity-vegetable.sold;\n    return (\n        <div className=\"col-4 mb-3\">\n            <div className=\"card\">\n                <div className=\"card-header\">{vegetable.name}</div>\n                <div className=\"card-body\">\n                    {shouldRedirect(redirect)}\n                    <ShowImage item={vegetable} url=\"vegetables\" />\n                    <p className=\"black-10\"> $ {vegetable.price} per kg</p>\n                    \n                    <p className=\"black-8\">\n                    Added on {moment(vegetable.createdAt).fromNow()}\n                    </p>\n                    {showStock(vegetable.quantity)}\n                    <br />\n                    {showAddToCart(showAddToCartButton)}\n\n                    {showRemoveButton(showRemoveVegetableButton)}\n\n                    {showCartUpdateOptions(cartUpdate)}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Card;\n","/home/dev/Desktop/EasyFarming/frontend/src/core/Checkbox.js",["256","257"],"import React, { useState, useEffect } from \"react\";\nimport \"./nav.css\";\n\nconst Checkbox = ({ farmers, handleFilters }) => {\n    const [value, setValue] = useState(0);\n\n    const handleChange = event => {\n        handleFilters(event.target.value);\n        setValue(event.target.value);\n    };\n\n    return farmers.map((c, i) => (\n        <li key={i} className=\"list-unstyled\">\n            <button \n                type=\"button\" \n                className = \"myButton\"\n                onClick = {handleChange}\n                value = {`${c._id}`}\n                >{c.name}\n            </button>\n        </li>\n    ));\n};\n\nexport default Checkbox;","/home/dev/Desktop/EasyFarming/frontend/src/core/Search.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/user/apiUser.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/core/RadioBox.js",["258","259"],"import React, { useState, useEffect } from \"react\";\n\nconst RadioBox = ({ prices, handleFilters }) => {\n    const [value, setValue] = useState(0);\n\n    const handleChange = event => {\n        handleFilters(event.target.value);\n        setValue(event.target.value);\n    };\n\n    return prices.map((p, i) => (\n        <div key={i}>\n            <input\n                onChange={handleChange}\n                value={`${p._id}`}\n                name={p}\n                type=\"radio\"\n                className=\"mr-2 ml-4\"\n            />\n            <label className=\"form-check-label\">{p.name}</label>\n        </div>\n    ));\n};\n\nexport default RadioBox;","/home/dev/Desktop/EasyFarming/frontend/src/core/cartHelpers.js",["260","261"],"export const addItem = (item, next) => {\n    let cart = [];\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            cart = JSON.parse(localStorage.getItem(\"cart\"));\n        }\n        cart.push({\n            ...item,\n            count: 1\n        });\n\n        // remove duplicates\n        // build an Array from new Set and turn it back into array using Array.from\n        // so that later we can re-map it\n        // new set will only allow unique values in it\n        // so pass the ids of each object/product\n        // If the loop tries to add the same value again, it'll get ignored\n        // ...with the array of ids we got on when first map() was used\n        // run map() on it again and return the actual product from the cart\n\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n            return cart.find(p => p._id === id);\n        });\n\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\n        next();\n    }\n};\n\n\nexport const itemTotal = () => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            return JSON.parse(localStorage.getItem(\"cart\")).length;\n        }\n    }\n    return 0;\n};\n\n\nexport const getCart = () => {\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            return JSON.parse(localStorage.getItem(\"cart\"));\n        }\n    }\n    return [];\n};\n\nexport const updateItem = (vegetableId, count) => {\n    let cart = [];\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            cart = JSON.parse(localStorage.getItem(\"cart\"));\n        }\n\n        cart.map((vegetable, i) => {\n            if (vegetable._id === vegetableId) {\n                cart[i].count = count;\n            }\n        });\n\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\n    }\n};\n\n\nexport const removeItem = vegetableId => {\n    let cart = [];\n    if (typeof window !== \"undefined\") {\n        if (localStorage.getItem(\"cart\")) {\n            cart = JSON.parse(localStorage.getItem(\"cart\"));\n        }\n\n        cart.map((vegetable, i) => {\n            if (vegetable._id === vegetableId) {\n                cart.splice(i, 1);\n            }\n        });\n\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\n    }\n    return cart;\n};","/home/dev/Desktop/EasyFarming/frontend/src/auth/index.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/core/fixedPrices.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/core/Checkout.js",["262","263","264","265","266"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport { getVegetables } from \"./apiCore\";\nimport Card from \"./Card\";\nimport { isAuthenticated } from \"../auth\";\nimport { Link } from \"react-router-dom\";\n\nconst Checkout = ({ vegetables }) => {\n\n    const getTotal = () => {\n        return vegetables.reduce((currentValue, nextValue) => {\n            return currentValue + nextValue.count * nextValue.price;\n        }, 0);\n    };\n\n    const showCheckout = () => {\n        return isAuthenticated() ? (\n            <button className=\"btn btn-success\">Checkout</button>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\n            </Link>\n        );\n    };\n\n    return (\n        <div>\n            <h2>Total: $ {getTotal()}</h2>\n\n            {showCheckout()}\n        </div>\n    );\n};\n\nexport default Checkout;","/home/dev/Desktop/EasyFarming/frontend/src/core/FarmerViewCard.js",["267"],"import React, { useState } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport moment from \"moment\";\nimport ShowImage from \"./ShowImage\"\nimport { isAuthenticated } from \"../auth\";\nimport { removeVegetable } from \"../farmer/apiFarmer\"\nimport \"./nav.css\"\n\nconst FCard = ({ vegetable, showAddToCartButton = true, showRemoveVegetableButton = false, setRun = f => f,\n    run = undefined }) => {\n\n    const [redirect, setRedirect] = useState(false);\n    \n    const { user, token } = isAuthenticated();\n    const remain = vegetable.quantity - vegetable.sold;\n\n    const removeCall = () => {\n        removeVegetable(vegetable._id, user._id, token, () => {\n        setRedirect(true);\n        });\n    };\n\n    const shouldRedirect = redirect => {\n        if (redirect) {\n            return <Redirect to=\"/remove\" />;\n        }\n    };\n\n    const showAddToCart = showAddToCartButton => {\n        return (\n            showAddToCartButton && (\n                <button\n                    className=\"btn btn-outline-warning mb-2\"\n                >\n                    Add to cart\n                </button>\n            )\n        );\n    };\n\n    const showStock = quantity => {\n        return quantity > 0 ? (\n          <span className=\"badge badge-primary badge-pill\">In Stock </span>\n        ) : (\n          <span className=\"badge badge-primary badge-pill\">Out of Stock </span>\n        );\n      };\n\n    const showRemoveButton = showRemoveVegetableButton => {\n        return (\n            showRemoveVegetableButton && (\n                <button\n                    onClick={removeCall}\n                    className=\"btn btn-outline-danger mt-2 mb-2\"\n                >\n                    Remove Vegetable\n                </button>\n            )\n        );\n    };\n\n\n  //  const remain = vegetable.quantity-vegetable.sold;\n    return (\n        <div className=\"col-4 mb-3\">\n            <div className=\"card\">\n                <div className=\"card-header\">{vegetable.name}</div>\n                <div className=\"card-body\">\n                    {shouldRedirect(redirect)}\n                    <ShowImage item={vegetable} url=\"vegetables\" />\n                    <p className=\"black-10\"> $ {vegetable.price} per kg</p>\n                    \n                    <p className=\"black-9\">\n                     Added on {moment(vegetable.createdAt).fromNow()}\n                    </p>\n                    <p className=\"black-8\">\n                    {vegetable.sold} kgs sold\n                    </p>\n                    {showStock(vegetable.quantity)}\n                    <p className=\"black-7\">\n                    {remain} kgs Left\n                    </p>\n                    <br />\n                    {showAddToCart(showAddToCartButton)}\n\n                    {showRemoveButton(showRemoveVegetableButton)}\n\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default FCard;\n","/home/dev/Desktop/EasyFarming/frontend/src/farmer/apiFarmer.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/core/ViewButton.js",["268","269","270"],"import React, { useState, useEffect } from \"react\";\nimport {isAuthenticated} from \"../auth\";\nimport \"./nav.css\";\nimport View from \"./viewVegetables\";\n\nconst ViewButton = ({handleFilters }) => {\n\n    const {user} = isAuthenticated();\n\n    const [value, setValue] = useState(0);\n\n    const handleChange = event => {\n        handleFilters(event.target.value);\n        setValue(event.target.value);\n    };\n\n    return  (\n            <li className=\"list-unstyled\">\n                <button \n                    type=\"button\" \n                    className = \"myButton\"\n                    onClick = {handleChange}\n                    value = {`${user._id}`}\n                    >View Items\n                </button>\n            </li>\n    );\n};\n\nexport default ViewButton;","/home/dev/Desktop/EasyFarming/frontend/src/config.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/core/ShowImage.js",[],"/home/dev/Desktop/EasyFarming/frontend/src/core/Menu.js",[],{"ruleId":"271","replacedBy":"272"},{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","severity":1,"message":"276","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"279","line":8,"column":17,"nodeType":"277","messageId":"278","endLine":8,"endColumn":20},{"ruleId":"275","severity":1,"message":"279","line":8,"column":17,"nodeType":"277","messageId":"278","endLine":8,"endColumn":20},{"ruleId":"275","severity":1,"message":"276","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"280","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":14},{"ruleId":"275","severity":1,"message":"281","line":27,"column":9,"nodeType":"277","messageId":"278","endLine":27,"endColumn":20},{"ruleId":"275","severity":1,"message":"282","line":28,"column":9,"nodeType":"277","messageId":"278","endLine":28,"endColumn":16},{"ruleId":"275","severity":1,"message":"283","line":29,"column":9,"nodeType":"277","messageId":"278","endLine":29,"endColumn":14},{"ruleId":"275","severity":1,"message":"284","line":30,"column":9,"nodeType":"277","messageId":"278","endLine":30,"endColumn":25},{"ruleId":"275","severity":1,"message":"285","line":31,"column":9,"nodeType":"277","messageId":"278","endLine":31,"endColumn":26},{"ruleId":"286","severity":1,"message":"287","line":37,"column":8,"nodeType":"288","endLine":37,"endColumn":10,"suggestions":"289"},{"ruleId":"275","severity":1,"message":"283","line":12,"column":12,"nodeType":"277","messageId":"278","endLine":12,"endColumn":17},{"ruleId":"290","severity":1,"message":"291","line":49,"column":33,"nodeType":"292","messageId":"293","endLine":49,"endColumn":35},{"ruleId":"290","severity":1,"message":"291","line":49,"column":71,"nodeType":"292","messageId":"293","endLine":49,"endColumn":73},{"ruleId":"275","severity":1,"message":"294","line":44,"column":8,"nodeType":"277","messageId":"278","endLine":44,"endColumn":23},{"ruleId":"275","severity":1,"message":"280","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":14},{"ruleId":"275","severity":1,"message":"283","line":18,"column":46,"nodeType":"277","messageId":"278","endLine":18,"endColumn":51},{"ruleId":"286","severity":1,"message":"295","line":33,"column":8,"nodeType":"288","endLine":33,"endColumn":10,"suggestions":"296"},{"ruleId":"275","severity":1,"message":"283","line":17,"column":12,"nodeType":"277","messageId":"278","endLine":17,"endColumn":17},{"ruleId":"275","severity":1,"message":"297","line":18,"column":19,"nodeType":"277","messageId":"278","endLine":18,"endColumn":27},{"ruleId":"286","severity":1,"message":"298","line":76,"column":8,"nodeType":"288","endLine":76,"endColumn":10,"suggestions":"299"},{"ruleId":"275","severity":1,"message":"300","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":14},{"ruleId":"275","severity":1,"message":"301","line":13,"column":12,"nodeType":"277","messageId":"278","endLine":13,"endColumn":16},{"ruleId":"275","severity":1,"message":"283","line":19,"column":12,"nodeType":"277","messageId":"278","endLine":19,"endColumn":17},{"ruleId":"275","severity":1,"message":"297","line":20,"column":19,"nodeType":"277","messageId":"278","endLine":20,"endColumn":27},{"ruleId":"286","severity":1,"message":"298","line":70,"column":8,"nodeType":"288","endLine":70,"endColumn":10,"suggestions":"302"},{"ruleId":"303","severity":1,"message":"304","line":153,"column":27,"nodeType":"305","messageId":"306","endLine":153,"endColumn":29},{"ruleId":"275","severity":1,"message":"276","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"276","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":26},{"ruleId":"275","severity":1,"message":"300","line":3,"column":8,"nodeType":"277","messageId":"278","endLine":3,"endColumn":14},{"ruleId":"275","severity":1,"message":"301","line":13,"column":12,"nodeType":"277","messageId":"278","endLine":13,"endColumn":16},{"ruleId":"275","severity":1,"message":"283","line":19,"column":12,"nodeType":"277","messageId":"278","endLine":19,"endColumn":17},{"ruleId":"275","severity":1,"message":"297","line":20,"column":19,"nodeType":"277","messageId":"278","endLine":20,"endColumn":27},{"ruleId":"286","severity":1,"message":"298","line":70,"column":8,"nodeType":"288","endLine":70,"endColumn":10,"suggestions":"307"},{"ruleId":"303","severity":1,"message":"304","line":152,"column":27,"nodeType":"305","messageId":"306","endLine":152,"endColumn":29},{"ruleId":"275","severity":1,"message":"280","line":4,"column":10,"nodeType":"277","messageId":"278","endLine":4,"endColumn":14},{"ruleId":"275","severity":1,"message":"308","line":27,"column":9,"nodeType":"277","messageId":"278","endLine":27,"endColumn":18},{"ruleId":"275","severity":1,"message":"285","line":31,"column":9,"nodeType":"277","messageId":"278","endLine":31,"endColumn":26},{"ruleId":"286","severity":1,"message":"287","line":37,"column":8,"nodeType":"288","endLine":37,"endColumn":10,"suggestions":"309"},{"ruleId":"275","severity":1,"message":"280","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":14},{"ruleId":"275","severity":1,"message":"310","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"311","line":5,"column":12,"nodeType":"277","messageId":"278","endLine":5,"endColumn":17},{"ruleId":"275","severity":1,"message":"310","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"311","line":4,"column":12,"nodeType":"277","messageId":"278","endLine":4,"endColumn":17},{"ruleId":"312","severity":1,"message":"313","line":57,"column":33,"nodeType":"314","messageId":"315","endLine":57,"endColumn":35},{"ruleId":"312","severity":1,"message":"313","line":75,"column":33,"nodeType":"314","messageId":"315","endLine":75,"endColumn":35},{"ruleId":"275","severity":1,"message":"316","line":1,"column":17,"nodeType":"277","messageId":"278","endLine":1,"endColumn":25},{"ruleId":"275","severity":1,"message":"310","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"317","line":2,"column":8,"nodeType":"277","messageId":"278","endLine":2,"endColumn":14},{"ruleId":"275","severity":1,"message":"318","line":3,"column":10,"nodeType":"277","messageId":"278","endLine":3,"endColumn":23},{"ruleId":"275","severity":1,"message":"319","line":4,"column":8,"nodeType":"277","messageId":"278","endLine":4,"endColumn":12},{"ruleId":"275","severity":1,"message":"280","line":2,"column":10,"nodeType":"277","messageId":"278","endLine":2,"endColumn":14},{"ruleId":"275","severity":1,"message":"310","line":1,"column":27,"nodeType":"277","messageId":"278","endLine":1,"endColumn":36},{"ruleId":"275","severity":1,"message":"320","line":4,"column":8,"nodeType":"277","messageId":"278","endLine":4,"endColumn":12},{"ruleId":"275","severity":1,"message":"311","line":10,"column":12,"nodeType":"277","messageId":"278","endLine":10,"endColumn":17},"no-native-reassign",["321"],"no-negated-in-lhs",["322"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'_id' is assigned a value but never used.","'Link' is defined but never used.","'farmer_name' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'createdVegetable' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'values'. Either include it or remove the dependency array. You can also do a functional update 'setValues(v => ...)' if you only need 'values' in the 'setValues' call.","ArrayExpression",["323"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'purchaseHistory' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'init' and 'match.params.userId'. Either include them or remove the dependency array.",["324"],"'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["325"],"'Search' is defined but never used.","'user' is assigned a value but never used.",["326"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["327"],"'farmer_id' is assigned a value but never used.",["328"],"'useEffect' is defined but never used.","'value' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","'Layout' is defined but never used.","'getVegetables' is defined but never used.","'Card' is defined but never used.","'View' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"333","fix":"335"},{"desc":"333","fix":"336"},{"desc":"329","fix":"337"},"Update the dependencies array to be: [values]",{"range":"338","text":"339"},"Update the dependencies array to be: [init, match.params.userId]",{"range":"340","text":"341"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"342","text":"343"},{"range":"344","text":"343"},{"range":"345","text":"343"},{"range":"346","text":"339"},[872,874],"[values]",[948,950],"[init, match.params.userId]",[2278,2280],"[limit, loadFilteredResults, myFilters.filters, skip]",[2135,2137],[2133,2135],[864,866]]