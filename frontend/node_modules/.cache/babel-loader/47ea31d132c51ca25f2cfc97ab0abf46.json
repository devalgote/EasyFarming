{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/Easyfarming/frontend/src/core/Buy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Search from \"./Search\";\nimport Card from \"./Card\";\nimport { getFarmers, getFilteredVegetables } from \"./apiCore\";\nimport Checkbox from \"./Checkbox\";\nimport RadioBox from \"./RadioBox\";\nimport { prices } from \"./fixedPrices\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Buy = () => {\n  _s();\n\n  const [myFilters, setMyFilters] = useState({\n    filters: {\n      farmer_id: [],\n      price: []\n    }\n  });\n  const [farmers, setFarmers] = useState([]);\n  const [error, setError] = useState(false);\n  const [limit, setLimit] = useState(6);\n  const [skip, setSkip] = useState(0);\n  const [filteredResults, setFilteredResults] = useState([]);\n\n  const init = () => {\n    getFarmers().then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setFarmers(data);\n      }\n    });\n  };\n\n  const loadFilteredResults = newFilters => {\n    // console.log(newFilters);\n    getFilteredVegetables(skip, limit, newFilters).then(data => {\n      if (data.error) {\n        setError(data.error);\n      } else {\n        setFilteredResults(data);\n      }\n    });\n  };\n\n  useEffect(() => {\n    init();\n    loadFilteredResults(skip, limit, myFilters.filters);\n  }, []);\n\n  const handleFilters = (filters, filterBy) => {\n    console.log(\"SHOP\", filters, filterBy);\n    const newFilters = { ...myFilters\n    };\n    newFilters.filters[filterBy] = filters;\n\n    if (filterBy === \"price\") {\n      let priceValues = handlePrice(filters);\n      newFilters.filters[filterBy] = priceValues;\n    }\n\n    loadFilteredResults(myFilters.filters);\n    setMyFilters(newFilters);\n  };\n\n  const handlePrice = value => {\n    const data = prices;\n    let array = [];\n\n    for (let key in data) {\n      if (data[key]._id === parseInt(value)) {\n        array = data[key].array;\n      }\n    }\n\n    return array;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"Buy now\",\n    description: \"\",\n    className: \"container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Filter by farmers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n            farmers: farmers,\n            handleFilters: filters => handleFilters(filters, \"farmer_id\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Filter by price range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(RadioBox, {\n            prices: prices,\n            handleFilters: filters => handleFilters(filters, \"price\")\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"mb-4\",\n          children: \"Vegetables\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: filteredResults.map((vegetable, i) => /*#__PURE__*/_jsxDEV(Card, {\n            vegetable: vegetable\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Buy, \"p0tAMMB9FEuVfkJHbNNofAgEUfs=\");\n\n_c = Buy;\nexport default Buy;\n\nvar _c;\n\n$RefreshReg$(_c, \"Buy\");","map":{"version":3,"sources":["/home/dev/Desktop/Easyfarming/frontend/src/core/Buy.js"],"names":["React","useState","useEffect","Layout","Search","Card","getFarmers","getFilteredVegetables","Checkbox","RadioBox","prices","Buy","myFilters","setMyFilters","filters","farmer_id","price","farmers","setFarmers","error","setError","limit","setLimit","skip","setSkip","filteredResults","setFilteredResults","init","then","data","loadFilteredResults","newFilters","handleFilters","filterBy","console","log","priceValues","handlePrice","value","array","key","_id","parseInt","map","vegetable","i"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Search from \"./Search\";\nimport Card from \"./Card\";\nimport {getFarmers, getFilteredVegetables} from \"./apiCore\";\nimport Checkbox from \"./Checkbox\";\nimport RadioBox from \"./RadioBox\";\nimport { prices } from \"./fixedPrices\";\n\nconst Buy = () => {\n\n    const [myFilters, setMyFilters] = useState({\n        filters: { farmer_id: [], price: [] }\n    });\n\n    const [farmers, setFarmers] = useState([]);\n    const [error, setError] = useState(false);\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    const init = () => {\n        getFarmers().then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFarmers(data);\n            }\n        });\n    };\n    const loadFilteredResults = newFilters => {\n        // console.log(newFilters);\n        getFilteredVegetables(skip, limit, newFilters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults(data);\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        console.log(\"SHOP\", filters, filterBy);\n        const newFilters = { ...myFilters };\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy === \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    return (\n        <Layout\n            title=\"Buy now\"\n            description=\"\"\n            className=\"container-fluid\"\n        >\n            <Search />\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <h4>Filter by farmers</h4>\n                    <ul>\n                        <Checkbox\n                            farmers={farmers}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"farmer_id\")\n                            }\n                        />\n                    </ul>\n\n                    <h4>Filter by price range</h4>\n                    <div>\n                        <RadioBox\n                            prices={prices}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"price\")\n                            }\n                        />\n                    </div>\n                </div>\n\n                <div className=\"col-8\">\n                    <h2 className=\"mb-4\">Vegetables</h2>\n                    <div className=\"row\">\n                        {filteredResults.map((vegetable, i) => (\n                            <Card key={i} vegetable={vegetable} />\n                        ))}\n                    </div>\n                </div>\n                \n            </div>\n        </Layout>\n    );\n};\n\nexport default Buy;\n"]},"metadata":{},"sourceType":"module"}