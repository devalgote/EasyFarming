{"ast":null,"code":"import { API } from \"../config\";\nimport queryString from \"query-string\";\nexport const getVegetables = sortBy => {\n  return fetch(`${API}/vegetables?sortBy=${sortBy}&order=desc&limit6`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getFarmers = () => {\n  return fetch(`${API}/farmers`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const list = params => {\n  const query = queryString.stringify(params);\n  console.log(query);\n  return fetch(`${API}/vegetables/search?${query}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const getFilteredVegetables = (skip, limit, filters = {}) => {\n  const data = {\n    limit,\n    skip,\n    filters\n  };\n  return fetch(`${API}/vegetables/by/search`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/home/dev/Desktop/EasyFarming/frontend/src/core/apiCore.js"],"names":["API","queryString","getVegetables","sortBy","fetch","method","then","response","json","catch","err","console","log","getFarmers","list","params","query","stringify","getFilteredVegetables","skip","limit","filters","data","headers","Accept","body","JSON"],"mappings":"AAAA,SAASA,GAAT,QAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAEA,OAAO,MAAMC,aAAa,GAAIC,MAAD,IAAY;AACrC,SAAOC,KAAK,CAAE,GAAEJ,GAAI,sBAAqBG,MAAO,oBAApC,EAAyD;AACjEE,IAAAA,MAAM,EAAE;AADyD,GAAzD,CAAL,CAGFC,IAHE,CAGGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALE,EAMFC,KANE,CAMIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANX,CAAP;AAOH,CARM;AAUP,OAAO,MAAMG,UAAU,GAAG,MAAM;AAC5B,SAAOT,KAAK,CAAE,GAAEJ,GAAI,UAAR,EAAmB;AAC3BK,IAAAA,MAAM,EAAE;AADmB,GAAnB,CAAL,CAGFC,IAHE,CAGGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALE,EAMFC,KANE,CAMIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANX,CAAP;AAOH,CARM;AAUP,OAAO,MAAMI,IAAI,GAAGC,MAAM,IAAI;AAC1B,QAAMC,KAAK,GAAGf,WAAW,CAACgB,SAAZ,CAAsBF,MAAtB,CAAd;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACA,SAAOZ,KAAK,CAAE,GAAEJ,GAAI,sBAAqBgB,KAAM,EAAnC,EAAsC;AAC9CX,IAAAA,MAAM,EAAE;AADsC,GAAtC,CAAL,CAGFC,IAHE,CAGGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GALE,EAMFC,KANE,CAMIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANX,CAAP;AAOH,CAVM;AAcP,OAAO,MAAMQ,qBAAqB,GAAG,CAACC,IAAD,EAAOC,KAAP,EAAcC,OAAO,GAAG,EAAxB,KAA+B;AAChE,QAAMC,IAAI,GAAG;AACTF,IAAAA,KADS;AAETD,IAAAA,IAFS;AAGTE,IAAAA;AAHS,GAAb;AAKA,SAAOjB,KAAK,CAAE,GAAEJ,GAAI,uBAAR,EAAgC;AACxCK,IAAAA,MAAM,EAAE,MADgC;AAExCkB,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAF+B;AAMxCC,IAAAA,IAAI,EAAEC,IAAI,CAACT,SAAL,CAAeK,IAAf;AANkC,GAAhC,CAAL,CAQFhB,IARE,CAQGC,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACC,IAAT,EAAP;AACH,GAVE,EAWFC,KAXE,CAWIC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAbE,CAAP;AAcH,CApBM","sourcesContent":["import { API } from \"../config\";\nimport queryString from \"query-string\"\n\nexport const getVegetables = (sortBy) => {\n    return fetch(`${API}/vegetables?sortBy=${sortBy}&order=desc&limit6`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const getFarmers = () => {\n    return fetch(`${API}/farmers`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const list = params => {\n    const query = queryString.stringify(params);\n    console.log(query);\n    return fetch(`${API}/vegetables/search?${query}`, {\n        method: \"GET\"\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n\nexport const getFilteredVegetables = (skip, limit, filters = {}) => {\n    const data = {\n        limit,\n        skip,\n        filters\n    };\n    return fetch(`${API}/vegetables/by/search`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(data)\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => {\n            console.log(err);\n        });\n};\n"]},"metadata":{},"sourceType":"module"}